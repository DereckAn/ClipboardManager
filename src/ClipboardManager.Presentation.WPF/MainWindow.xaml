<Window x:Class="ClipboardManager.Presentation.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClipboardManager.Presentation.WPF"
        xmlns:viewModels="clr-namespace:ClipboardManager.Application.ViewModels;assembly=ClipboardManager.Application"
        xmlns:views="clr-namespace:ClipboardManager.Presentation.WPF.Views"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel, IsDesignTimeCreatable=False}"
        Title="Clipboard History" Height="600" Width="400"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        BorderThickness="0"
        ShowInTaskbar="False" Topmost="True"
        WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded"
        Deactivated="Window_Deactivated"
        KeyDown="Window_KeyDown"> <!-- Para cerrar con ESC -->

    <!-- Recurso para el Icono de Bandeja -->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Styles.xaml"/>
                <ResourceDictionary Source="Resources/DataTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <tb:TaskbarIcon x:Key="NotifyIcon"
                            IconSource="/Assets/clipboard_icon.ico" 
                            ToolTipText="Clipboard Manager" />
        </ResourceDictionary>
    </Window.Resources>

    <!-- Usar Border para sombras y esquinas redondeadas -->
    <Border Background="{DynamicResource MaterialDesignPaper}" 
            CornerRadius="8"
            BorderBrush="{DynamicResource MaterialDesignDivider}"
            BorderThickness="1">
        <Border.Effect>
            <DropShadowEffect ShadowDepth="0" BlurRadius="15" Color="#CCCCCC" Opacity="0.5"/>
        </Border.Effect>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/> <!-- Search/Filter Bar -->
                <RowDefinition Height="*"/>    <!-- History List -->
                <RowDefinition Height="Auto"/> <!-- Status Bar -->
            </Grid.RowDefinitions>

            <!-- Search Bar -->
            <TextBox Grid.Row="0" Margin="10" Padding="5"
                     Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                     ToolTip="Search clipboard history" />
                     <!-- Añadir icono de búsqueda, botón de limpiar, etc. -->
                     <!-- Añadir botones de filtro (Texto, Imagen, etc.) -->

            <!-- History List - ItemsControl con un WrapPanel o VirtualizingStackPanel -->
             <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemsSource="{Binding ClipboardItems}"
                              Margin="5">
                     <ItemsControl.ItemsPanel>
                         <ItemsPanelTemplate>
                            <!-- Usar StackPanel vertical para empezar -->
                            <VirtualizingStackPanel Orientation="Vertical"/>
                            <!-- O un WrapPanel para tarjetas lado a lado -->
                            <!-- <WrapPanel Orientation="Horizontal" /> -->
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <!-- El DataTemplate se define en Resources/DataTemplates.xaml -->
                </ItemsControl>
            </ScrollViewer>


            <!-- Status Bar (Opcional) -->
            <StatusBar Grid.Row="2">
                <StatusBarItem>
                    <TextBlock Text="{Binding ClipboardItems.Count, StringFormat='{}{ClipboardItems.Count} items shown'}" />
                </StatusBarItem>
                <StatusBarItem HorizontalAlignment="Right">
                    <TextBlock Text="Loading..."
               Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <!-- Asegúrate que BooleanToVisibilityConverter esté definido -->
                </StatusBarItem>
            </StatusBar>

             <!-- Indicador de Carga (Opcional, superpuesto) -->
            <ProgressBar Grid.Row="1" Height="5" VerticalAlignment="Top" Margin="0"
                         IsIndeterminate="{Binding IsLoading}"
                         Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" /> <!-- Necesitas BooleanToVisibilityConverter -->


        </Grid>
    </Border>
</Window>