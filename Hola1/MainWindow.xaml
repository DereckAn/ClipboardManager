<Window x:Class="BasicClipboardApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BasicClipboardApp"
        mc:Ignorable="d"
        Title="Mi Historial Clipboard"
        Height="450"
        SourceInitialized="Window_SourceInitialized"
        Closing="Window_Closing"
        StateChanged="Window_StateChanged"
        Background="#AA000000"
        AllowsTransparency="True"
        WindowStyle="None"
        TextElement.Foreground="White"
        MouseLeftButtonDown="Window_MouseLeftButtonDown">

    <Window.Resources>
        <!-- Estilo para el Thumb (la parte que se arrastra) de la ScrollBar -->
        <Style x:Key="TransparentScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="thumbBorder"
                                Background="#66FFFFFF" 
                            CornerRadius="3"
                                BorderBrush="#33FFFFFF"
                            
                            BorderThickness="0"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="thumbBorder" Property="Background" Value="#99FFFFFF"/>
                                    <!-- Más opaco al pasar el mouse -->
                                </Trigger>
                                <Trigger Property="IsDragging" Value="True">
                                    <Setter TargetName="thumbBorder" Property="Background" Value="#BBFFFFFF"/>
                                    <!-- Más opaco al arrastrar -->
                                </Trigger>
                            </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para los botones de repetir (flechas), los ocultamos -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo completo para la ScrollBar Horizontal -->
        <Style x:Key="TransparentHorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <!-- Fondo de la pista transparente inicialmente -->
            <Setter Property="Margin" Value="0,0,0,2"/>
            <!-- Pequeño margen inferior -->
            <Setter Property="Height" Value="8"/>
            <!-- Altura más delgada para la barra de scroll -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">
                            <!-- La pista solo aparece si el mouse está sobre la scrollbar o el ListBox -->
                            <Border x:Name="TrackBackground" Background="#11FFFFFF" CornerRadius="4" Opacity="0"/>
                            <Track x:Name="PART_Track" IsDirectionReversed="False">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource ScrollBarLineButton}" Command="{x:Static ScrollBar.LineLeftCommand}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource ScrollBarLineButton}" Command="{x:Static ScrollBar.LineRightCommand}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource TransparentScrollBarThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Hacer visible y ligeramente opaco el fondo del track cuando el mouse está sobre el ListBox o la propia ScrollBar -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBox}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="TrackBackground" Property="Opacity" Value="1"/>
                                <Setter TargetName="PART_Track" Property="IsEnabled" Value="True"/>
                                <!-- Asegura que el thumb sea visible -->
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="TrackBackground" Property="Opacity" Value="1"/>
                                <Setter TargetName="PART_Track" Property="IsEnabled" Value="True"/>
                            </Trigger>
                            <!-- Cuando no hay mouse over, el thumb se oculta (IsEnabled=false en Track) y el fondo del track es transparente -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBox}}" Value="False"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="TrackBackground" Property="Opacity" Value="0"/>
                                <Setter TargetName="PART_Track" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border BorderBrush="#55FFFFFF" BorderThickness="1" CornerRadius="5" Margin="5">
        <StackPanel Margin="10">
            <Label Content="Historial del Portapapeles:" FontWeight="Bold" Margin="0,0,0,5" Foreground="White"/>

            <ListBox x:Name="HistoryListBox"
                     Background="Transparent"
                     BorderThickness="0"
                     Height="380"
                     ItemsSource="{Binding ClipboardHistoryUI}"
                     SelectionChanged="HistoryListBox_SelectionChanged"
                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                     ScrollViewer.VerticalScrollBarVisibility="Disabled">
                <ListBox.Resources>
                    <!-- Aplicar el estilo SÓLO a las ScrollBars horizontales de este ListBox -->
                    <Style TargetType="ScrollBar" BasedOn="{StaticResource TransparentHorizontalScrollBarStyle}">
                        <Style.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <!-- Si por alguna razón apareciera una vertical, la ocultamos completamente -->
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Resources>

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border Background="White"
                                CornerRadius="5"
                                Margin="5"
                                Padding="10"
                                MaxWidth="400"
                                MinHeight="50"
                                VerticalAlignment="Stretch">
                            <TextBlock Text="{Binding}"
                                       TextWrapping="Wrap"
                                       Foreground="Black"
                                       VerticalAlignment="Center"/>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <ContentPresenter VerticalAlignment="Stretch"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0" Color="LightGray" Opacity="0.5" BlurRadius="5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0" Color="CornflowerBlue" Opacity="0.7" BlurRadius="8"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </StackPanel>
    </Border>
</Window>