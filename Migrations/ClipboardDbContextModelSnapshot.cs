// <auto-generated />
using System;
using Clipboard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clipboard.Migrations
{
    [DbContext(typeof(ClipboardDbContext))]
    partial class ClipboardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Clipboard.Models.ClipboardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("BLOB");

                    b.Property<int>("ClipboardTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Format")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Preview")
                        .HasMaxLength(600)
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClipboardTypeId");

                    b.ToTable("ClipboardItems");
                });

            modelBuilder.Entity("Clipboard.Models.ClipboardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ClipboardTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Plain text content",
                            Name = "Text"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Image content",
                            Name = "Image"
                        },
                        new
                        {
                            Id = 3,
                            Description = "File paths and file content",
                            Name = "File"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Color values",
                            Name = "Color"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Source code snippets",
                            Name = "Code"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Url to a webpage",
                            Name = "Link"
                        });
                });

            modelBuilder.Entity("Clipboard.Models.ClipboardItem", b =>
                {
                    b.HasOne("Clipboard.Models.ClipboardType", "ClipboardType")
                        .WithMany("ClipboardItems")
                        .HasForeignKey("ClipboardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClipboardType");
                });

            modelBuilder.Entity("Clipboard.Models.ClipboardType", b =>
                {
                    b.Navigation("ClipboardItems");
                });
#pragma warning restore 612, 618
        }
    }
}
